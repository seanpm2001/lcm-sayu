version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.4

executors:
  node:
    docker:
      - image: node:12

jobs:
  build:
    executor: node
    steps:
      - checkout
      - restore_cache:
          key: yarn-packages-{{ checksum "./yarn.lock" }}
      - run:
          name: Install UI dependencies
          command: yarn
      - run:
          name: UI component tests & coverage
          command: yarn test:coverage
      - run:
          name: UI Linter test
          command: yarn lint
      - run:
          name: UI Format test
          command: yarn test:format
      - run:
          name: UI Typescript test
          command: yarn test:type-check
      - save_cache:
          key: yarn-packages-{{ checksum "./yarn.lock" }}
          paths:
            - ~/.cache/yarn

  create-docker-image:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build docker image
          command: |
            docker build -t ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:latest .
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:latest
      - persist_to_workspace:
          root: .
          paths:
            - docker-image

  push-docker-image-and-update:
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: .
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: '$AWS_ACCESS_KEY_ID'
          aws-region: '$AWS_DEFAULT_REGION'
      - run:
          name: Load image
          command: |
            docker load --input docker-image/image.tar
      - run:
          name: Setup common environment variables
          command: |
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:latest"' >> $BASH_ENV
      - run:
          name: Push image
          command: |
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker push $FULL_IMAGE_NAME
      - run:
          name: Update ECS service
          command: |
            aws --region $AWS_DEFAULT_REGION ecs update-service --force-new-deployment --task-definition lcm-sayu-task-prod --service lcm-sayu-service-prod --cluster lcm-sayu-cluster-prod

workflows:
  version: 2
  build-lcm-sayu:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - create-docker-image:
          filters:
            branches:
              only: master
          requires:
            - build
      - push-docker-image-and-update:
          filters:
            branches:
              only: master
          requires:
            - create-docker-image
